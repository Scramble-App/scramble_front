{"version":3,"sources":["containers/CompanyPage/CompanyPage.module.scss","App.module.scss","containers/MyCompany/MyCompany.module.scss","components/Logo/Logo.module.scss","history.js","ducks/users/sagas.js","ducks/companies/sagas.js","ducks/requests/sagas.js","ducks/updates/saga.js","ducks/swaps/saga.js","ducks/index.js","ducks/users/reducers.js","ducks/companies/reducers.js","ducks/requests/reducers.js","ducks/updates/reducers.js","ducks/swaps/reducers.js","ducks/users/selectors.js","ducks/companies/selectors.js","containers/CompaniesList/index.js","ducks/requests/selectors.js","containers/CompanyPage/index.js","ducks/swaps/selectors.js","components/FundraisingPage/index.js","containers/RequestsPage/index.js","components/CustomFormField/index.js","components/Signup/index.js","components/AddCompany/index.js","auth.js","components/Login/index.js","containers/Account/index.js","ducks/updates/selectors.js","containers/MyCompany/index.js","components/HeaderMenu/index.js","components/Logo/index.js","App.js","serviceWorker.js","store.js","index.js","components/FundraisingPage/FundraisingPage.module.scss","components/Login/Login.module.scss","containers/CompaniesList/CompaniesList.module.scss"],"names":["module","exports","createBrowserHistory","fetchUser","signup","login","logout","watchFetchUserRequest","watchSignupRequest","watchLoginRequest","watchLogout","axios","get","res","put","type","payload","data","username","email","post","call","notification","error","message","redirectUrl","Cookies","set","auth_token","history","push","remove","takeEvery","takeLatest","fetchCompaniesRequest","addCompanyRequest","fetchCompanyRequest","watchAddCompanyRequest","watchFetchCompaniesRequest","watchFetchCompanyRequest","action","companyId","sendWatchlistRequest","updateWatchlistStatus","fetchWatchlistRequests","watchSendWatchlistRequest","watchGetWatchlistRequestsList","watchUpdateWatchlistStatus","resolve","reject","success","patch","id","status","fetchCompanyUpdates","addCompanyUpdate","watchAddCompanyUpdate","watchFetchCompanyUpdates","console","log","sendSwapRequest","fetchSwapsRequest","updateSwapRequest","watchSendSwapRequest","watchFetchSwapRequest","watchUpdateSwapRequest","rootSaga","propsSelector","state","props","all","rootReducer","combineReducers","user","isLoading","companies","filter","i","requests","updatedElement","find","el","newState","updates","swaps","currentUserSelector","companiesListSelector","matchedCompanySelector","createSelector","match","company","parseInt","params","ownCompanySelector","connect","dispatch","useEffect","gutter","offset","span","TabPane","tab","key","className","styles","tabContentWrapper","mode","style","width","placeholder","Option","filterSliderWrapper","range","step","defaultValue","max","leftButton","subHeader","companiesList","map","name","founder","companyCard","to","trim","length","title","height","src","frameBorder","allowFullScreen","requestsSelector","outcomeRequestsSelector","myCompany","request","sender","target","incomeRequestsSelector","matchedOutcomeRequestSelector","ownCompany","outcomeRequest","a","Promise","companyPage","description","pagination","size","columns","dataIndex","render","text","datetime","Date","toDateString","dataSource","logo_url","companyLogo","alt","onClick","swapsSelector","swap","outcomeSwapsSelector","incomeSwapsSelector","companySwapsSelector","fundraising","fundraisingPageWrapper","raise_limit","raised","start_date","end_date","totalAmountHeader","totalAmount","progressBarWrapper","format","progressBarText","percent","swapsHeader","min_swaps_amount","swapsCommonWrapper","swapsWrapper","outcomeRequests","incomeRequests","outcomeSwaps","incomeSwaps","income","outcome","defaultChecked","onChange","e","checked","record","CustomFormField","icon","input","prefix","color","Signup","onSignupFormSubmit","formWrapper","onSubmit","handleSubmit","Item","htmlType","or","AddCompany","onAddCompanyFormSubmit","authOnly","connectedRouterRedirect","authenticatedSelector","authenticatingSelector","redirectPath","unauthOnly","withoutCompany","withCompany","Login","onLoginFormSubmit","first_name","last_name","updatesSelector","onMyCompanyFormSubmit","defaultActiveKey","component","textarea","withRouter","location","theme","selectedKeys","pathname","menu","lineHeight","background","link","count","dot","Logo","logo","values","addCompany","Header","header","align","Content","path","exact","CompaniesList","CompanyPage","FundraisingPage","RequestsPage","Account","Boolean","window","hostname","sagaMiddleware","createSagaMiddleware","enhancer","compose","applyMiddleware","store","createStore","run","defaults","baseURL","interceptors","use","config","token","headers","Authorization","url","charAt","warn","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c9392d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"companyLogo\":\"CompanyPage_companyLogo__1t7cM\",\"datetime\":\"CompanyPage_datetime__UGoDr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"App_logo__2qPv-\",\"header\":\"App_header__2L3DO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"MyCompany_textarea__dD050\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__3IG6m\"};","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import axios from \"axios\";\nimport {call, put, takeEvery, takeLatest} from \"@redux-saga/core/effects\";\nimport Cookies from \"js-cookie\";\nimport history from \"../../history\";\nimport {notification} from \"antd\";\n\nfunction* fetchUser () {\n  try {\n    const res = yield axios.get('auth/users/me/')\n    yield put({type: 'FETCH_USER_SUCCESS', payload: res.data})\n  } catch (e) {\n    yield put({type: 'FETCH_USER_FAILURE'})\n  }\n}\n\nfunction* signup ({ payload }) {\n  try {\n    payload.username = payload.email\n    yield axios.post('auth/users/', payload)\n    yield call(login, { payload }, 'add-company')\n  }\n  catch (e) {\n    notification.error({message: 'Something went wrong. Please try again!'})\n  }\n}\n\nfunction* login ({ payload }, redirectUrl = 'companies') {\n  try {\n    payload.username = payload.email\n    const res = yield axios.post('auth/token/login/', payload)\n    Cookies.set('token', res.data.auth_token)\n    yield put({type: 'LOGIN_SUCCESS'})\n    yield call(fetchUser)\n    yield call(history.push, redirectUrl)\n  }\n  catch (e) {\n    yield put({type: 'LOGIN_FAILURE'})\n    notification.error({message: 'Something went wrong. Please try again!'})\n  }\n}\n\nfunction* logout() {\n  try {\n    yield axios.post('auth/token/logout/')\n    Cookies.remove('token')\n    yield put({ type: 'LOGOUT_SUCCESS'})\n  }\n  catch (e) {\n    yield put({ type: 'LOGOUT_FAILURE'})\n    notification.error({message: 'Something went wrong. Please try again!'})\n  }\n}\n\nexport function* watchFetchUserRequest () {\n  yield takeEvery('FETCH_USER_REQUEST', fetchUser)\n}\n\nexport function* watchSignupRequest() {\n  yield takeLatest('SIGNUP_REQUEST', signup)\n}\n\nexport function* watchLoginRequest() {\n  yield takeLatest('LOGIN_REQUEST', login)\n}\n\nexport function* watchLogout() {\n  yield takeLatest('LOGOUT_REQUEST', logout)\n}\n","import axios from \"axios\";\nimport {call, put, takeEvery} from \"@redux-saga/core/effects\";\nimport history from \"../../history\";\n\nfunction* fetchCompaniesRequest() {\n  try {\n    const res = yield axios.get('company/')\n\n    yield put({type: 'FETCH_COMPANIES_SUCCESS', payload: res.data})\n  } catch (e) {\n    //TODO\n    // yield put({type: 'FETCH_COMPANIES_FAILURE'})\n  }\n}\n\nfunction* addCompanyRequest(action) {\n  try {\n    const res = yield axios.post('company/', action.payload)\n    yield put({type: 'FETCH_ADD_COMPANIES_SUCCESS', payload: res.data})\n    yield put({type: 'FETCH_USER_REQUEST'})\n    yield call(history.push, '/companies')\n  } catch (e) {\n    //TODO\n    // yield put({type: 'FETCH_COMPANIES_FAILURE'})\n  }\n}\n\nfunction* fetchCompanyRequest(action) {\n  try {\n    const res = yield axios.get(`company/${action.payload.companyId}/`)\n    yield put({type: 'FETCH_COMPANY_SUCCESS', payload: res.data})\n  } catch (e) {\n    //TODO\n    // yield put({type: 'FETCH_COMPANY_FAILURE'})\n  }\n}\n\nexport function* watchAddCompanyRequest()  {\n  yield takeEvery('ADD_COMPANY_REQUEST', addCompanyRequest)\n}\nexport function* watchFetchCompaniesRequest() {\n  yield takeEvery('FETCH_COMPANIES_REQUEST', fetchCompaniesRequest)\n}\nexport function* watchFetchCompanyRequest() {\n  yield takeEvery('FETCH_COMPANY_REQUEST', fetchCompanyRequest)\n}\n","import axios from \"axios\";\nimport {put, takeEvery, takeLatest} from \"@redux-saga/core/effects\";\nimport {notification} from \"antd\";\n\nfunction* sendWatchlistRequest({ payload, resolve, reject }) {\n  try {\n    const res = yield axios.post('request/', payload)\n    resolve()\n    yield put({type: 'ADD_WATCHLIST_SUCCESS', payload: res.data})\n    notification.success({message: 'Your request has been sent!'})\n  } catch (e) {\n    notification.error({message: 'Something went wrong. Please try again!'})\n  }\n}\nfunction* updateWatchlistStatus ({payload}) {\n  try {\n    yield axios.patch(`request/${payload.id}/`, payload)\n    yield put({type: 'UPDATE_WATCHLIST_SUCCESS', payload})\n    notification.success({message: `You've successfully ${payload.status === 'accepted' ? 'accepted' : 'declined'} request!`})\n  } catch (e) {\n    notification.error({message: 'Something went wrong. Please try again!'})\n  }\n}\n\nfunction* fetchWatchlistRequests() {\n  const res = yield axios.get('request/')\n  yield put({type: 'GET_WATCHLIST_SUCCESS', payload: res.data})\n}\n\nexport function* watchSendWatchlistRequest() {\n  yield takeEvery('SEND_WATCHLIST_REQUEST_REQUEST', sendWatchlistRequest)\n}\n\nexport function* watchGetWatchlistRequestsList() {\n  yield takeLatest('GET_WATCHLISTS_REQUEST', fetchWatchlistRequests)\n}\nexport function* watchUpdateWatchlistStatus() {\n  yield takeLatest('UPDATE_WATCHLIST_REQUEST', updateWatchlistStatus)\n}\n","import axios from \"axios\";\nimport {call, put, takeEvery} from \"@redux-saga/core/effects\";\n\n\nfunction* fetchCompanyUpdates () {\n  try {\n    const res = yield axios.get('/update/')\n    yield put({type: 'FETCH_UPDATES_SUCCESS', payload: res.data})\n  } catch (e) {\n    //TODO\n    // put({type: 'FETCH_UPDATES_SUCCESS'})\n  }\n}\nfunction* addCompanyUpdate (action) {\n  try {\n    const res = yield axios.post('/update/', action.payload)\n    yield put({type: 'ADD_UPDATE_SUCCESS', payload: res.data})\n  } catch (e) {\n    console.log(e)\n    //TODO\n    // put({type: 'ADD_UPDATE_SUCCESS'})\n  }\n}\nexport function* watchAddCompanyUpdate () {\n  yield takeEvery('ADD_UPDATE_REQUEST', addCompanyUpdate)\n}\nexport function* watchFetchCompanyUpdates() {\n  yield takeEvery('FETCH_UPDATES_REQUEST', fetchCompanyUpdates)\n}\n","import axios from \"axios\"\nimport {call, put, takeEvery} from \"@redux-saga/core/effects\";\n\nfunction* sendSwapRequest(action) {\n  try {\n    const res = yield axios.post('/swaps/', action.payload)\n    yield put({type: 'ADD_SWAP_SUCCESS'})\n  } catch (e) {\n    //TODO\n    // yield({type: \"ADD_SWAP_FAILURE\"})\n  }\n}\n\nfunction* fetchSwapsRequest() {\n  try {\n    const res = yield axios.get('/swaps/')\n    yield put({type: 'FETCH_SWAPS_SUCCESS', payload: res.data})\n  } catch (e) {\n    //TODO\n    // yield({type: \"FETCH_SWAP_FAILURE\"})\n  }\n}\n\nfunction* updateSwapRequest({payload}) {\ntry {\n  const res = yield axios.patch(`/swaps/${payload.id}/`, payload)\n  yield put({type: 'UPDATE_SWAP_SUCCESS', payload: res.data})\n} catch (e) {\n  //TODO\n  // yield({type: \"UPDATE_SWAP_FAILURE\"})\n}\n\n}\n\nexport function* watchSendSwapRequest() {\n  yield takeEvery(\"ADD_SWAP_REQUEST\", sendSwapRequest)\n}\nexport function* watchFetchSwapRequest() {\n  yield takeEvery(\"FETCH_SWAPS_REQUEST\", fetchSwapsRequest)\n}\nexport function* watchUpdateSwapRequest() {\n  yield takeEvery(\"UPDATE_SWAP_REQUEST\", updateSwapRequest)\n}\n","import {all} from \"@redux-saga/core/effects\";\nimport {watchFetchUserRequest, watchLoginRequest, watchLogout, watchSignupRequest} from \"./users/sagas\";\nimport {combineReducers} from \"redux\";\nimport user from './users/reducers'\nimport companies from \"./companies/reducers\";\nimport requests from './requests/reducers'\nimport updates from './updates/reducers'\nimport swaps from './swaps/reducers'\nimport {watchAddCompanyRequest, watchFetchCompaniesRequest, watchFetchCompanyRequest,} from \"./companies/sagas\";\nimport {watchGetWatchlistRequestsList, watchSendWatchlistRequest, watchUpdateWatchlistStatus} from \"./requests/sagas\";\nimport {watchAddCompanyUpdate, watchFetchCompanyUpdates} from \"./updates/saga\";\nimport {watchFetchSwapRequest, watchSendSwapRequest, watchUpdateSwapRequest} from \"./swaps/saga\";\n\nexport const propsSelector = (state, props) => props\n\nexport function* rootSaga() {\n  yield all([\n    watchFetchUserRequest(),\n    watchSignupRequest(),\n    watchLoginRequest(),\n    watchFetchCompaniesRequest(),\n    watchAddCompanyRequest(),\n    watchLogout(),\n    watchSendWatchlistRequest(),\n    watchGetWatchlistRequestsList(),\n    watchUpdateWatchlistStatus(),\n    watchFetchCompanyUpdates(),\n    watchAddCompanyUpdate(),\n    watchFetchCompanyRequest(),\n    watchSendSwapRequest(),\n    watchFetchSwapRequest(),\n    watchUpdateSwapRequest()\n  ])\n}\n\nexport const rootReducer = combineReducers({\n  user,\n  companies,\n  requests,\n  updates,\n  swaps\n})\n","export default function userReducer (state = {isLoading: true}, {type, payload} = {}) {\n  switch(type) {\n    case 'FETCH_USER_REQUEST':\n      return {...state, isLoading: true}\n\n    case 'FETCH_USER_SUCCESS':\n      return {...state, ...payload, isLoading: false}\n\n    case 'FETCH_USER_FAILURE':\n      return {...state, isLoading: false}\n\n    case 'LOGOUT_SUCCESS':\n      return {isLoading: false}\n\n    default:\n      return state\n\n  }\n}\n\n","export default function companiesReducer(state = [], {type, payload} = {}) {\n  if (type === 'FETCH_COMPANIES_SUCCESS') {\n    return payload\n  } else if (type === 'FETCH_COMPANY_SUCCESS') {\n    return [...state.filter(i => i.id !== payload.id), payload]\n  } else {\n    return state\n  }\n}\n\n\n","export default function requestsReducer(state = [], {type, payload}) {\n  switch (type) {\n    case 'GET_WATCHLIST_SUCCESS':\n      return payload\n\n    case 'UPDATE_WATCHLIST_SUCCESS':\n      const elementToUpdate = state.find((el) => el.id === payload.id)\n      const updatedElement = {...elementToUpdate, status: payload.status}\n      const newState = state.filter(el => el.id !== payload.id)\n      return [...newState, updatedElement]\n\n    case 'ADD_WATCHLIST_SUCCESS':\n      return [...state, payload]\n\n    default:\n      return state\n  }\n}\n\n\n\n\n\n","export default function updatesReducer(state = [], {type, payload} = {}) {\n  if (type === 'FETCH_UPDATES_SUCCESS') {\n    return payload\n  } else if (type === 'ADD_UPDATE_SUCCESS') {\n    return [...state, payload]\n  } else {\n    return state\n  }\n\n}\n","export default function swapsReducer(state = [], {type, payload}) {\n  switch (type) {\n    case 'FETCH_SWAPS_SUCCESS':\n      return payload\n    case 'UPDATE_SWAP_SUCCESS':\n      return [...state.filter(el => el.id !== payload.id), payload]\n    default:\n      return state\n  }\n\n}\n","export const currentUserSelector = state => state.user\n","import {createSelector} from \"reselect\";\nimport {propsSelector} from \"../index\";\nimport {currentUserSelector} from \"../users/selectors\";\n\nexport const companiesListSelector = state => state.companies\nexport const matchedCompanySelector = createSelector(\n  [companiesListSelector, propsSelector],\n  (companies, { match }) => companies.find(company => company.id === parseInt(match.params.companyId, 10)) || {}\n)\nexport const ownCompanySelector = createSelector(\n  [currentUserSelector],\n  user => user.company || {}\n)\n","import React, {useEffect} from 'react'\nimport styles from \"./CompaniesList.module.scss\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {Button, Card, Col, Row, Select, Slider, Tabs} from \"antd\";\nimport {companiesListSelector} from \"../../ducks/companies/selectors\";\n\nconst CompaniesList = ({dispatch, companies}) => {\n  useEffect(() => {\n    dispatch({type: 'FETCH_COMPANIES_REQUEST'})\n  }, []);\n\n  return (\n    //  TODO move to component view\n    <Row gutter={32}>\n      <Col offset={4} span={16}>\n        <Tabs>\n          <Tabs.TabPane tab=\"Search\" key={1}>\n            <div className={styles.tabContentWrapper}>\n              <Row gutter={32}>\n                <Col span={8}>\n                  <h3>Filters</h3>\n                  <Select\n                    mode=\"multiple\"\n                    style={{width: '200px'}}\n                    placeholder=\"Industry\"\n                  >\n                    <Select.Option key={1}>Aerospace</Select.Option>\n                    <Select.Option key={2}>Transport</Select.Option>\n                    <Select.Option key={3}>Computer</Select.Option>\n                  </Select>\n                  <div className={styles.filterSliderWrapper}>\n                    <p>Annual Turnover</p>\n                    <Slider\n                      range\n                      step={10}\n                      defaultValue={[20, 50]}\n                    />\n                    <p>Company age</p>\n                    <Slider\n                      range\n                      step={1}\n                      defaultValue={[1, 10]}\n                      max={10}\n                    />\n                    <p>Employees number</p>\n                    <Slider\n                      range\n                      step={10}\n                      defaultValue={[1, 200]}\n                      max={1000}\n                    />\n                    <Button type=\"default\" className={styles.leftButton}> All</Button>\n                    <Button type=\"default\">Watchlist</Button>\n                  </div>\n                </Col>\n                <Col span={16}>\n                  <div className={styles.subHeader}>\n                    <h2>Companies list</h2>\n                  </div>\n                  <div className={styles.companiesList}>\n                    {companies.map(({name, id, founder}) => (\n                      <Card key={`${name}_${id}`} className={styles.companyCard}>\n                        <Link to={`/companies/${id}`}>\n                          {name}\n                        </Link>\n                        {founder.trim().length > 0 && <p className={styles.founder}>Founder: {founder}</p>}\n                      </Card>\n                    ))}\n                  </div>\n                </Col>\n              </Row>\n            </div>\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Power BI\" key={2}>\n            <iframe title=\"Power BI data\" width=\"100%\" height=\"541.25\"\n                    src=\"https://app.powerbi.com/reportEmbed?reportId=e9c0bf82-f997-42b2-8fb6-db78a15b46ce&autoAuth=true&ctid=dd0bea93-74d1-4e09-bf5f-8d90c0308096&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLXVzLWVhc3QyLWItcHJpbWFyeS1yZWRpcmVjdC5hbmFseXNpcy53aW5kb3dzLm5ldC8ifQ%3D%3D\"\n                    frameBorder=\"0\" allowFullScreen=\"true\"/>\n          </Tabs.TabPane>\n        </Tabs>\n      </Col>\n    </Row>\n  )\n};\n\nexport default connect(state => ({\n  companies: companiesListSelector(state),\n}), null)(CompaniesList);\n","import {createSelector} from \"reselect\";\nimport {companiesListSelector, ownCompanySelector} from \"../companies/selectors\";\nimport {propsSelector} from \"../index\";\n\nexport const requestsSelector = state => state.requests\nexport const outcomeRequestsSelector = createSelector(\n  [requestsSelector, companiesListSelector, ownCompanySelector],\n  (requests, companies, myCompany) => (\n    requests\n      .filter(request => request.sender === myCompany.id)\n      .map((request) => ({\n        ...request,\n        sender: companies.find(company => company.id === request.sender),\n        target: companies.find(company => company.id === request.target)\n      }))\n  )\n)\n\nexport const incomeRequestsSelector = createSelector(\n  [requestsSelector, companiesListSelector, ownCompanySelector],\n  (requests, companies, myCompany) =>\n    requests\n      .filter(request => request.target === myCompany.id)\n      .map((request) => ({\n        ...request,\n        sender: companies.find(company => company.id === request.sender),\n        target: companies.find(company => company.id === request.target)\n      }))\n)\n\nexport const matchedOutcomeRequestSelector = createSelector(\n  [outcomeRequestsSelector, propsSelector],\n  (requests, { match }) => requests.find(request => request.target.id === parseInt(match.params.id))\n)\n","import React, {useEffect} from 'react'\nimport styles from './CompanyPage.module.scss'\nimport {connect} from \"react-redux\";\nimport {Button, Col, Row, Table} from \"antd\";\nimport {matchedCompanySelector, ownCompanySelector} from \"../../ducks/companies/selectors\";\nimport {matchedOutcomeRequestSelector} from \"../../ducks/requests/selectors\";\n\nconst CompanyPage = ({company, ownCompany, dispatch, outcomeRequest, match}) => {\n  useEffect(() => {\n    dispatch({type: 'GET_WATCHLISTS_REQUEST'})\n    dispatch({type: 'FETCH_COMPANY_REQUEST', payload: {companyId: match.params.companyId}})\n    console.log(match)\n  }, []);\n\n  const sendWatchlistRequest = async () => {\n    await new Promise((resolve, reject) => {\n      dispatch({\n        type: 'SEND_WATCHLIST_REQUEST_REQUEST',\n        payload: {\n          target: company.id,\n          sender: ownCompany.id\n        },\n        resolve\n      })\n    })\n\n  }\n\n  return (\n    <Row className={styles.companyPage}>\n      <Col offset={4} span={14}>\n        <h2>{company.name}</h2>\n        {company.description && <p>{company.description}</p>}\n        <div>\n          {company.updates && company.updates.length &&\n          <>\n            <h4>Monthly updates:</h4>\n            <Table\n              pagination={false}\n              size=\"middle\"\n              columns={[\n                {\n                  title: \"Update\",\n                  dataIndex: 'text',\n                  key: 'text'\n                },\n                {\n                  title: \"Date\",\n                  dataIndex: 'created_at',\n                  key: \"created_at\",\n                  render: text => <p className={styles.datetime}>{(new Date(text)).toDateString()}</p>\n                }\n              ]}\n              dataSource={company.updates}\n            />\n          </>\n          }\n        </div>\n      </Col>\n      <Col span={2}>\n        {company.logo_url &&\n        <img\n          className={styles.companyLogo}\n          src={company.logo_url}\n          alt=\"Logo\"\n        />\n        }\n        <div>\n          {!outcomeRequest &&\n            <Button onClick={sendWatchlistRequest}>Add to watchlist</Button>\n          }\n          {/*<Button>Swap request</Button>*/}\n          <Button onClick={() => dispatch({type: \"ADD_SWAP_REQUEST\", payload: {target: parseInt(match.params.companyId, 10)}})}>Send swap</Button>\n        </div>\n\n      </Col>\n    </Row>\n  )\n};\n\nexport default connect(\n  (state, props) => ({\n    company: matchedCompanySelector(state, props),\n    ownCompany: ownCompanySelector(state),\n    outcomeRequest: matchedOutcomeRequestSelector(state, props)\n  }),\n  null\n)(CompanyPage)\n","import {createSelector} from \"reselect\";\nimport {companiesListSelector, ownCompanySelector} from \"../companies/selectors\";\n\n// TODO fix type hardcode\nexport const swapsSelector = state => state.swaps.map(swap => ({...swap, type: 'swap'}))\nexport const outcomeSwapsSelector = createSelector(\n  [swapsSelector, companiesListSelector, ownCompanySelector],\n  (swaps, companies, ownCompany) => (\n    swaps\n      .filter(swap => swap.sender === ownCompany.id)\n      .map((swap) => ({\n        ...swap,\n        sender: companies.find(company => company.id === swap.sender),\n        target: companies.find(company => company.id === swap.target)\n      }))\n  )\n)\n\nexport const incomeSwapsSelector = createSelector(\n  [swapsSelector, companiesListSelector, ownCompanySelector],\n  (swaps, companies, ownCompany) => (\n    swaps\n      .filter(swap => swap.target === ownCompany.id)\n      .map((swap) => ({\n        ...swap,\n        sender: companies.find(company => company.id === swap.sender),\n        target: companies.find(company => company.id === swap.target)\n      }))\n  )\n)\n\nexport const companySwapsSelector = createSelector(\n  [ownCompanySelector, companiesListSelector],\n  (ownCompany, companies) => (\n    ownCompany.fundraising[0].swaps\n      .map(swap => ({\n        ...swap,\n        sender: companies.find(company => company.id === swap.sender) || {},\n        target: companies.find(company => company.id === swap.target) || {}\n      }))\n  )\n)\n","import React, {useEffect} from 'react'\nimport styles from './FundraisingPage.module.scss'\nimport {Link} from \"react-router-dom\";\nimport {Col, Progress, Row, Tabs} from \"antd\";\nimport {connect} from \"react-redux\";\nimport {currentUserSelector} from \"../../ducks/users/selectors\";\nimport {companySwapsSelector} from \"../../ducks/swaps/selectors\";\n\nconst FundraisingPage = ({dispatch, user, swaps}) => {\n  useEffect(() => {\n    dispatch({type: 'FETCH_COMPANIES_REQUEST'})\n  }, []);\n  return (\n    <Row>\n      {console.log(user.company)}\n      <Col offset={4} span={16}>\n        <Tabs>\n          <Tabs.TabPane tab=\"Active\" key={1}>\n            <div className={styles.fundraisingPageWrapper}>\n              <div>\n                {/* TODO select only active fundraising*/}\n                {user.company.fundraising.map(el => (\n                  <>\n                    {console.log(el.raise_limit / el.raised)}\n                    <h2>{new Date(el.start_date).toDateString()} ~ {new Date(el.end_date).toDateString()}</h2>\n                    <h3 className={styles.totalAmountHeader}>Total to raise: <span\n                      className={styles.totalAmount}>${el.raise_limit}</span></h3>\n                    <div className={styles.progressBarWrapper}>\n                      <Progress type='circle'\n                                format={() => <div className={styles.progressBarText}>${el.raised}\n                                  <br/>of <span>${el.raise_limit}</span></div>}\n                                percent={el.raise_limit / 100 * el.raised}\n                                width={200}\n                      />\n                    </div>\n                    <h3 className={styles.swapsHeader}>\n                      Minimum swaps amount: {el.min_swaps_amount}\n                    </h3>\n                    <div className={styles.swapsCommonWrapper}>\n                      <div className={styles.swapsWrapper}>\n                        <h3>Successful swaps</h3>\n                        {\n                          swaps\n                            .filter(swap => swap.status === 'accepted')\n                            .map(swap => {\n                                if (swap.sender.id === user.company.id) {\n                                  return <div><Link>{swap.target.name}</Link></div>\n                                } else {\n                                  return <div><Link>{swap.sender.name}</Link></div>\n                                }\n                              }\n                            )\n                        }\n                      </div>\n                      <div className={styles.swapsWrapper}>\n                        <h3>Rejected swaps</h3>\n                        {\n                          swaps\n                            .filter(swap => swap.status === 'declined')\n                            .map(swap => {\n                                if (swap.sender.id === user.company.id) {\n                                  return <Link>{swap.target.name}</Link>\n                                } else {\n                                  return <Link>{swap.sender.name}</Link>\n                                }\n                              }\n                            )\n                        }\n                      </div>\n                    </div>\n                  </>\n                ))}\n              </div>\n            </div>\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Past\" key={2}>\n            <div className={styles.fundraisingPageWrapper}>\n              Past\n            </div>\n          </Tabs.TabPane>\n        </Tabs>\n      </Col>\n    </Row>\n  )\n}\nexport default connect(state => ({\n  user: currentUserSelector(state),\n  swaps: companySwapsSelector(state)\n}), null)(FundraisingPage)\n\n\n","import React, {useEffect} from 'react'\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {incomeRequestsSelector, outcomeRequestsSelector} from \"../../ducks/requests/selectors\";\nimport {Button, Checkbox, Col, Divider, Row, Table, Tabs} from \"antd\";\nimport {incomeSwapsSelector, outcomeSwapsSelector} from \"../../ducks/swaps/selectors\";\n\nconst RequestsPage = ({outcomeRequests, incomeRequests, dispatch, incomeSwaps, outcomeSwaps}) => {\n  useEffect((...props) => {\n    dispatch({type: 'FETCH_COMPANIES_REQUEST'})\n    dispatch({type: 'GET_WATCHLISTS_REQUEST'})\n    dispatch({type: 'FETCH_SWAPS_REQUEST'})\n  }, [])\n\n  const income = [...incomeRequests, ...incomeSwaps]\n  const outcome = [...outcomeRequests, ...outcomeSwaps]\n\n  return (\n    <Row>\n      <Col offset={4} span={4}>\n        <h3>Filters:</h3>\n        <Checkbox defaultChecked={true} onChange={e => (`checked = ${e.target.checked}`)}>Watch list</Checkbox>\n        <Checkbox defaultChecked={true} onChange={e => (`checked = ${e.target.checked}`)}>Swaps</Checkbox>\n      </Col>\n      <Col offset={1} span={11}>\n        <Tabs>\n          <Tabs.TabPane tab=\"Income\" key={2}>\n            <Table\n              columns={[\n                {\n                  title: 'Sender',\n                  dataIndex: 'sender',\n                  key: 'sender',\n                  render: sender => <Link to={`/companies/${sender.id}`}>{sender.name}</Link>\n                },\n                {title: 'Type', dataIndex: 'type', key: 'type'},\n                {title: 'Date', dataIndex: 'date', key: 'date'},\n                {title: 'Status', dataIndex: 'status', key: 'status'},\n                {title: 'Founder', dataIndex: 'founder', key: 'founder'},\n                {\n                  title: 'Action',\n                  key: 'action',\n                  render: (text, record) => {\n                    return (\n                      <>\n                        {\n                          record.status === 'pending'\n                            &&\n                          <span>\n                            {\n                              record.type === 'watchlist'\n                              ?\n                                <>\n                                <Button onClick={() => dispatch({\n                                  type: 'UPDATE_WATCHLIST_REQUEST',\n                                  payload: {status: 'accepted', id: record.id}\n                                })}>Accept</Button>\n                                <Divider type=\"vertical\"/>\n                                <Button onClick={() => dispatch({\n                              type: 'UPDATE_WATCHLIST_REQUEST',\n                              payload: {status: 'declined', id: record.id}\n                            })}>Decline</Button>\n                                </>\n                              :\n                                <>\n                                  <Button onClick={() => dispatch({\n                                    type: 'UPDATE_SWAP_REQUEST',\n                                    payload: {status: 'accepted', id: record.id}\n                                  })}>Accept</Button>\n                                  <Divider type=\"vertical\"/>\n                                  <Button onClick={() => dispatch({\n                                    type: 'UPDATE_SWAP_REQUEST',\n                                    payload: {status: 'declined', id: record.id}\n                                  })}>Decline</Button>\n                                </>\n                            }\n                        </span>\n                        }\n                      </>\n                    )\n                  },\n                },\n              ]}\n              dataSource={income}\n            />\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Outcome\" key={1}>\n            <Table\n              columns={[\n                {\n                  title: 'Target',\n                  dataIndex: 'target',\n                  key: 'target',\n                  render: target => <Link to={`/companies/${target.id}`}>{target.name}</Link>\n                },\n                {title: 'Type', dataIndex: 'type', key: 'type'},\n                {title: 'Date', dataIndex: 'date', key: 'date'},\n                {title: 'Status', dataIndex: 'status', key: 'status'}\n              ]}\n              dataSource={outcome}\n            />\n          </Tabs.TabPane>\n        </Tabs>\n      </Col>\n    </Row>\n  )\n};\n\nexport default connect(state => ({\n  outcomeRequests: outcomeRequestsSelector(state),\n  incomeRequests: incomeRequestsSelector(state),\n  outcomeSwaps: outcomeSwapsSelector(state),\n  incomeSwaps: incomeSwapsSelector(state),\n}), null)(RequestsPage)\n","import React from 'react'\nimport {Icon, Input} from \"antd\";\nimport {Field} from \"react-final-form\";\n\nconst CustomFormField = ({name, placeholder, icon, type = 'text'}) => (\n  <Field name={name} render={\n    ({input}) => (<Input\n        {...input}\n        prefix={icon ? <Icon type={icon} style={{color: 'rgba(0,0,0,.25)'} }/> : <span />}\n        placeholder={placeholder}\n      />\n    )\n  } type={type} />\n)\n\nexport default CustomFormField\n","import React from 'react'\nimport {Form as FinalForm} from \"react-final-form\";\nimport {Link} from \"react-router-dom\";\nimport {Button, Form, PageHeader} from \"antd\";\nimport styles from \"../Login/Login.module.scss\";\nimport CustomFormField from \"../CustomFormField\";\n\nconst Signup = ({onSignupFormSubmit}) => (\n  <PageHeader title=\"Please, sign up\" className={styles.formWrapper}>\n    <FinalForm\n      onSubmit={onSignupFormSubmit}\n      render={({handleSubmit}) => (\n        <Form onSubmit={handleSubmit}>\n          <Form.Item>\n            <CustomFormField type=\"email\" name=\"email\" placeholder=\"Email\" icon=\"mail\"/>\n          </Form.Item>\n          <Form.Item>\n            <CustomFormField type=\"password\" name=\"password\" placeholder=\"Password\" icon=\"lock\"/>\n          </Form.Item>\n          <Form.Item>\n            <CustomFormField type=\"text\" name=\"first_name\" placeholder=\"First Name\"/>\n          </Form.Item>\n          <Form.Item>\n            <CustomFormField type=\"text\" name=\"last_name\" placeholder=\"Last Name\"/>\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Sign up\n            </Button>\n            <span className={styles.or}>or</span>\n            <Link to='/login'>\n              login\n            </Link>\n          </Form.Item>\n        </Form>\n      )}\n    />\n  </PageHeader>\n)\n\nexport default Signup\n","import React from \"react\";\nimport {Field, Form as FinalForm} from \"react-final-form\";\nimport {Button, Form, PageHeader} from \"antd\";\nimport styles from \"../Login/Login.module.scss\";\nimport CustomFormField from \"../CustomFormField\";\n\nconst AddCompany = ({onAddCompanyFormSubmit}) => (\n  <PageHeader title=\"Add your company information \" className={styles.formWrapper}>\n\n  <FinalForm\n    onSubmit={onAddCompanyFormSubmit}\n    render={({handleSubmit}) => (\n      <Form onSubmit={handleSubmit}>\n\n        <Form.Item>\n          <CustomFormField name=\"name\" placeholder=\"Company name\" />\n        </Form.Item>\n        <Form.Item>\n          <CustomFormField name=\"description\" placeholder=\"Company description\" />\n        </Form.Item>\n        <Form.Item>\n          <CustomFormField name=\"logo_url\" placeholder=\"Logo URL\" />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Send\n          </Button>\n        </Form.Item>\n      </Form>\n    )}\n  />\n  </PageHeader>\n)\n\nexport default AddCompany\n","import {connectedRouterRedirect} from \"redux-auth-wrapper/history4/redirect\";\n\nconst authorizedUserCriteria = {\n  authenticatedSelector: state => !!state.user.id,\n  authenticatingSelector: state => !!state.user.isLoading,\n}\n\nconst unauthorizedUserCriteria = {\n  authenticatedSelector: state => !state.user.id && !state.user.isLoading,\n  authenticatingSelector: state => !!state.user.isLoading,\n}\n\nconst withoutCompanyCriteria = {\n  authenticatedSelector: state => !state.user.company && !state.user.isLoading,\n  authenticatingSelector: state => !!state.user.isLoading,\n}\n\nconst withCompanyCriteria = {\n  authenticatedSelector: state => !!state.user.company,\n  authenticatingSelector: state => !!state.user.isLoading,\n}\n\nexport const authOnly =\n  connectedRouterRedirect({\n    ...authorizedUserCriteria,\n    redirectPath: '/login'\n  })\n\nexport const unauthOnly =\n  connectedRouterRedirect({\n    ...unauthorizedUserCriteria,\n    redirectPath: '/companies'\n  })\n\nexport const withoutCompany =\n  connectedRouterRedirect({\n    ...withoutCompanyCriteria,\n    redirectPath: '/companies'\n  })\n\nexport const withCompany =\n  connectedRouterRedirect({\n    ...withCompanyCriteria,\n    redirectPath: '/add-company'\n  })\n","import React from 'react'\nimport {Form as FinalForm} from \"react-final-form\";\nimport {Link} from \"react-router-dom\";\nimport {Button, Form, PageHeader} from \"antd\";\nimport CustomFormField from \"../CustomFormField\";\nimport styles from './Login.module.scss'\n\nconst Login = ({onLoginFormSubmit}) => (\n  <PageHeader title=\"Login to start\" className={styles.formWrapper}>\n    <FinalForm\n      onSubmit={onLoginFormSubmit}\n      render={({handleSubmit}) => (\n        <Form onSubmit={handleSubmit}>\n          <Form.Item>\n            <CustomFormField type=\"email\" name=\"email\" placeholder=\"Email\" icon=\"mail\"/>\n          </Form.Item>\n          <Form.Item>\n            <CustomFormField type=\"password\" name=\"password\" placeholder=\"Password\" icon=\"lock\"/>\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Log in\n            </Button>\n            <span className={styles.or}>or</span>\n            <Link to='/signup'>\n              sign up\n            </Link>\n          </Form.Item>\n        </Form>\n      )}\n    />\n  </PageHeader>\n)\n\nexport default Login\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Button, Col, Row} from \"antd\";\nimport {currentUserSelector} from \"../../ducks/users/selectors\";\n\nconst Account = ({ user, dispatch }) => (\n  <Row>\n    <Col span={12} offset={4}>\n      <h2>My account</h2>\n      <p>Email: {user.email}</p>\n      <p>Full name: {user.first_name} {user.last_name}</p>\n      <Button onClick={() => dispatch({type: 'LOGOUT_REQUEST'})}>Log out</Button>\n    </Col>\n  </Row>\n);\n\nexport default connect(\n  state => ({\n    user: currentUserSelector(state)\n  }),\n  null\n)(Account)\n\n\n\n","\n\nexport const updatesSelector = state => state.updates\n","import React, {useEffect} from \"react\";\nimport {Button, Col, Collapse, Form, Row, Table, Tabs} from \"antd\";\nimport {Link} from \"react-router-dom\";\nimport style from \"./MyCompany.module.scss\"\nimport {Field, Form as FinalForm} from \"react-final-form\";\nimport {connect} from \"react-redux\";\nimport {ownCompanySelector} from \"../../ducks/companies/selectors\";\nimport {updatesSelector} from \"../../ducks/updates/selectors\";\n\n\nconst MyCompany = ({company, dispatch, updates, onMyCompanyFormSubmit}) => {\n  useEffect(() => {\n    dispatch({type: 'FETCH_COMPANIES_REQUEST'})\n    dispatch({type: 'FETCH_UPDATES_REQUEST'})\n  }, [])\n  return (\n    <Row>\n      <Col offset={4} span={16}>\n        <Tabs defaultActiveKey=\"updates\">\n          <Tabs.TabPane key=\"info\" tab=\"Info\">\n            <h2>Company info</h2>\n            <div>{company.name}</div>\n          </Tabs.TabPane>\n          <Tabs.TabPane key=\"powerbi\" tab=\"Power BI\">\n            <iframe title=\"company PowerBI\" width=\"100%\" height=\"541.25\"\n                    src=\"https://app.powerbi.com/reportEmbed?reportId=034bdd15-a2b0-4223-a375-26f6d9320a59&autoAuth=true&ctid=dd0bea93-74d1-4e09-bf5f-8d90c0308096&config=eyJjbHVzdGVyVXJsIjoiaHR0cHM6Ly93YWJpLXVzLWVhc3QyLWItcHJpbWFyeS1yZWRpcmVjdC5hbmFseXNpcy53aW5kb3dzLm5ldC8ifQ%3D%3D\"\n                    frameBorder=\"0\" allowFullScreen=\"true\"/>\n          </Tabs.TabPane>\n          <Tabs.TabPane key=\"updates\" tab=\"Updates\">\n            <div>\n              <h2>Add company update</h2>\n              <FinalForm\n                onSubmit={onMyCompanyFormSubmit}\n                render={({handleSubmit}) => (\n                  <Form onSubmit={handleSubmit}>\n                    <Field\n                      name=\"text\"\n                      component=\"textarea\"\n                      className={style.textarea}\n                    >\n                    </Field>\n                    <br/>\n                    <Button type=\"primary\"\n                            htmlType=\"submit\">Add</Button>\n                  </Form>\n                )}\n              />\n            </div>\n            <br/>\n            <h2>Your company's updates</h2>\n            <Table\n              columns={[\n                {\n                  title: 'Update',\n                  dataIndex: 'text',\n                  key: 'update'\n                },\n                {\n                  title: 'Date',\n                  dataIndex: 'created_at',\n                  key: 'date',\n                  render: text => <span>{(new Date(text)).toDateString()}</span>\n                }\n              ]}\n              dataSource={updates}\n            />\n          </Tabs.TabPane>\n        </Tabs>\n      </Col>\n    </Row>\n  )\n}\nexport default connect(\n  (state) => ({\n    company: ownCompanySelector(state),\n    updates: updatesSelector(state)\n  }),\n  null\n)(MyCompany)\n","import React from 'react'\nimport {Badge, Icon, Menu} from \"antd\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport styles from './HeaderMenu.module.scss'\n\nconst HeaderMenu = ({ location }) => (\n  <>\n    <Menu\n      mode=\"horizontal\"\n      theme=\"dark\"\n      selectedKeys={[location.pathname]}\n      className={styles.menu}\n      style={{lineHeight: '64px', background: '#ffd200'}}\n    >\n      <Menu.Item key=\"/companies\">\n        <Link className={styles.link} to=\"/companies\">Companies</Link>\n      </Menu.Item>\n\n      <Menu.Item key=\"/requests\">\n        <Link className={styles.link} to=\"/requests\">Requests</Link>\n      </Menu.Item>\n\n      <Menu.Item key=\"/my-company\">\n        <Link className={styles.link} to=\"/my-company\">My Company</Link>\n      </Menu.Item>\n\n      <Menu.Item key=\"/account\">\n        <Link className={styles.link} to=\"/account\">My Account</Link>\n      </Menu.Item>\n      <Menu.Item key=\"/fundraising\">\n        <Link className={styles.link} to=\"/fundraising\">Fundraising</Link>\n      </Menu.Item>\n      <Menu.Item key={4}>\n        <Badge count={1} dot>\n          <Icon type=\"notification\" />\n        </Badge>\n      </Menu.Item>\n    </Menu>\n  </>\n)\n\nexport default withRouter(HeaderMenu)\n","import React from 'react'\nimport styles from './Logo.module.scss'\n\nconst Logo = () => (\n  <div className={styles.logo} />\n)\n\nexport default Logo\n","import React, {useEffect} from 'react';\nimport {Link, Redirect, Route, Router, Switch} from \"react-router-dom\";\nimport CompaniesList from \"./containers/CompaniesList\";\nimport CompanyPage from \"./containers/CompanyPage\";\nimport FundraisingPage from \"./components/FundraisingPage\";\nimport RequestsPage from \"./containers/RequestsPage\";\nimport {connect} from \"react-redux\";\nimport Signup from \"./components/Signup\";\nimport AddCompany from \"./components/AddCompany\";\nimport {authOnly, unauthOnly, withCompany, withoutCompany} from \"./auth\";\nimport Login from \"./components/Login\";\nimport Account from \"./containers/Account\";\nimport MyCompany from \"./containers/MyCompany\";\nimport history from \"./history\"\nimport {Col, Layout, Row} from \"antd\";\nimport styles from './App.module.scss'\nimport HeaderMenu from \"./components/HeaderMenu\";\nimport {currentUserSelector} from \"./ducks/users/selectors\";\nimport Logo from \"./components/Logo\";\n\nfunction App({dispatch, user}) {\n  useEffect((...props) => {\n    dispatch({type: 'FETCH_USER_REQUEST'})\n    dispatch({type: 'FETCH_WATCHLIST_REQUESTS_REQUEST'})\n  }, [])\n\n  const signup = (values) => {\n    dispatch({type: 'SIGNUP_REQUEST', payload: values})\n  }\n\n  const login = (values) => {\n    dispatch({type: 'LOGIN_REQUEST', payload: values})\n  }\n\n  const addCompany = (values) => {\n    dispatch({type: 'ADD_COMPANY_REQUEST', payload: values})\n  }\n\n  const myCompany = (values) => {\n    dispatch({type: 'ADD_UPDATE_REQUEST', payload: values})\n  }\n\n  return (\n    <Router history={history}>\n      <Layout>\n        <Layout.Header className={styles.header}>\n          <Row type=\"flex\" align=\"middle\" style={{height: '100%'}}>\n            <Col span={4} offset={3}>\n              <div className={styles.logo}>\n                <Link to=\"/\">\n                  <Logo/>\n                </Link>\n              </div>\n            </Col>\n            <Col span={11} push={3}>\n              {user.id && <HeaderMenu/>}\n            </Col>\n          </Row>\n        </Layout.Header>\n\n        <Layout.Content>\n          <Switch>\n            <Route\n              path=\"/signup\"\n              component={unauthOnly(props => <Signup onSignupFormSubmit={signup} {...props}/>)}\n            />\n            <Route\n              path=\"/login\"\n              component={unauthOnly(props => <Login onLoginFormSubmit={login} {...props}/>)}\n            />\n            <Route\n              path=\"/companies\"\n              exact\n              component={authOnly(withCompany(CompaniesList))}\n            />\n            <Route\n              path=\"/companies/:companyId\"\n              component={authOnly(withCompany(CompanyPage))}\n            />\n            <Route\n              path=\"/fundraising\"\n              component={authOnly(withCompany(FundraisingPage))}\n            />\n            <Route\n              path=\"/requests\"\n              component={authOnly(withCompany(RequestsPage))}\n            />\n            <Route\n              path=\"/add-company\"\n              component={authOnly(withoutCompany(props => <AddCompany\n                onAddCompanyFormSubmit={addCompany} {...props} />))}\n            />\n            <Route\n              path=\"/account\"\n              component={authOnly(Account)}\n            />\n            <Route\n              path=\"/my-company\"\n              component={authOnly(withCompany(props => <MyCompany onMyCompanyFormSubmit={myCompany} {...props}/>))}\n            />\n            <Redirect\n              to=\"/login\"\n            />\n          </Switch>\n        </Layout.Content>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default connect((state) => ({\n  user: currentUserSelector(state),\n}), null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport {rootReducer} from './ducks'\nimport {rootSaga} from \"./ducks\";\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst composeEnhancers =  typeof window === 'object' && window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] ?\n  window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']({ }) : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(sagaMiddleware)\n)\n\nconst store = createStore(\n  rootReducer,\n  enhancer\n);\n\nsagaMiddleware.run(rootSaga)\n// TODO handle all errors\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport axios from 'axios'\nimport Cookies from 'js-cookie'\nimport 'antd/dist/antd.css';\n\naxios.defaults.baseURL = `/api/`;\naxios.interceptors.request.use(config => {\n  const token = Cookies.get('token')\n\n  if (token) {\n    config.headers.Authorization = `Token ${token}`\n  }\n\n  return config\n})\n\naxios.interceptors.request.use(config => {\n  // TODO add trailing slash\n  if (config.url.charAt(config.url.length - 1) !== '/') {\n    console.warn('Don`t forget about mandatory trailing slash!')\n  }\n\n  // if (config.url[config.url.length-1] !== '/') {\n  //   config.url += '/';\n  // }\n  return config;\n});\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fundraisingPage\":\"FundraisingPage_fundraisingPage__cmlk0\",\"fundraisingPageWrapper\":\"FundraisingPage_fundraisingPageWrapper__2rU6w\",\"totalAmountHeader\":\"FundraisingPage_totalAmountHeader__2UGuM\",\"progressBarWrapper\":\"FundraisingPage_progressBarWrapper__1P4NS\",\"totalAmount\":\"FundraisingPage_totalAmount__3ZwUK\",\"swapsHeader\":\"FundraisingPage_swapsHeader__1eMUz\",\"swapsCommonWrapper\":\"FundraisingPage_swapsCommonWrapper__s3yal\",\"progressBarText\":\"FundraisingPage_progressBarText__1tAeY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"or\":\"Login_or__3XeKI\",\"formWrapper\":\"Login_formWrapper__3uxRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CompaniesList_wrapper__2ansE\",\"subHeader\":\"CompaniesList_subHeader__FbC21\",\"companiesList\":\"CompaniesList_companiesList__CnJ_q\",\"founder\":\"CompaniesList_founder__1ecxy\",\"tabContentWrapper\":\"CompaniesList_tabContentWrapper__2RDQC\",\"filterSliderWrapper\":\"CompaniesList_filterSliderWrapper__E8ZcY\",\"leftButton\":\"CompaniesList_leftButton__33UdP\"};"],"sourceRoot":""}